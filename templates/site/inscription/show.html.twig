{#
 # This file is part of «Epigraphy of Medieval Rus» database.
 #
 # Copyright (c) National Research University Higher School of Economics
 #
 # «Epigraphy of Medieval Rus» database is free software:
 # you can redistribute it and/or modify it under the terms of the
 # GNU General Public License as published by the Free Software Foundation, version 3.
 #
 # «Epigraphy of Medieval Rus» database is distributed
 # in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 # the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 # See the GNU General Public License for more details.
 #
 # For the full copyright and license information, please view the LICENSE
 # file that was distributed with this source code. If you have not received
 # a copy of the GNU General Public License along with
 # «Epigraphy of Medieval Rus» database,
 # see <http://www.gnu.org/licenses/>.
 #}

{%- extends 'site/base.html.twig' -%}

{% block page_title %}
    {%- if is_granted('ROLE_ADMIN') and not inscription.isShownOnSite -%}
        <span class="eomr-information-box eomr-information-box__warning">
            {{- 'noPublication'|transWithContext(translationContext) -}}
        </span>
    {%- endif -%}
{% endblock %}

{% block page_content %}

    {% import _self as self %}

    <table class="table table-bordered">
        <tbody>
            {{ self.format_text_row(translationContext, 'conventionalDate', inscription.conventionalDate) }}
            {{ self.format_text_row(translationContext, 'zeroRow.description', self.format_zero_row(inscription, 'description')) }}
            {{ self.format_text_row(translationContext, 'carrier.individualName', inscription.carrier.individualName) }}
            {{ self.format_text_row(translationContext, 'carrier.categories', inscription.carrier.categories|map(namedEntity => namedEntity.name)) }}
            {{ self.format_text_row(translationContext, 'carrier.discoverySite', inscription.carrier.discoverySite) }}
            {{ self.format_carrier(translationContext, inscription) }}
            {{ self.format_original_text_row(translationContext, 'zeroRow.text', inscription) }}
            {{ self.format_text_row(translationContext, 'zeroRow.transliteration', self.format_zero_row(inscription, 'transliteration')) }}
            {{ self.format_text_row(translationContext, 'zeroRow.translation', self.format_translation(inscription)) }}
            {{ self.format_text_row(translationContext, 'zeroRow.photos', self.format_zero_row_images(inscription, 'photos')) }}
            {{ self.format_text_row(translationContext, 'zeroRow.drawings', self.format_zero_row_images(inscription, 'drawings')) }}
            {{ self.format_text_row(translationContext, 'zeroRow.alphabets', self.format_zero_row(inscription, 'alphabets')) }}
            {{ self.format_text_row(translationContext, 'zeroRow.materials', self.format_zero_row(inscription, 'materials')) }}
            {{ self.format_text_row(translationContext, 'zeroRow.writingMethods', self.format_zero_row(inscription, 'writingMethods')) }}
            {{ self.format_text_row(translationContext, 'zeroRow.placeOnCarrier', self.format_zero_row(inscription, 'placeOnCarrier')) }}
            {{ self.format_text_row(translationContext, 'zeroRow.preservationStates', self.format_zero_row(inscription, 'preservationStates')) }}
            {{ self.format_text_row(translationContext, 'zeroRow.nonStratigraphicalDate', self.format_zero_row(inscription, 'nonStratigraphicalDate')) }}
            {{ self.format_text_row(translationContext, 'zeroRow.dateInText', self.format_zero_row(inscription, 'dateInText')) }}
            {{ self.format_text_row(translationContext, 'zeroRow.historicalDate', self.format_zero_row(inscription, 'historicalDate')) }}
            {{ self.format_text_row(translationContext, 'comment', inscription.comment) }}
            {{ self.format_literature(translationContext, inscription) }}
        </tbody>
    </table>
    {% if is_granted('ROLE_ADMIN') %}
        <div class="container">
            <a href="{{ path('epigraphy_inscription_edit', {'id': inscription.id}) }}"
               target="_blank"
               class="h5"
            >
                {{- 'admin'|transWithContext(translationContext) -}}
            </a>
        </div>
    {% endif %}
    {{ include('site/inscription/_photoswipe_layout.html.twig') }}
{% endblock %}

{%- macro format_zero_row(inscription, propertyName, formatType = 'html') -%}

    {% import _self as self %}
    {# {% autoescape false %} #}
        {{- valueStringifier.stringify(inscription, propertyName, formatType)|raw -}}
    {# {% endautoescape %} #}
{%- endmacro -%}

{%- macro format_zero_row_images(inscription, propertyName) -%}

    {% import _self as self %}

    {% set actualFiles = actualValueExtractor.extractActualFiles(inscription, [propertyName]) %}

    {% if actualFiles is not empty %}
        <div class="gallery"
             data-images-container="{{ propertyName }}"
             itemscope
             itemtype="http://schema.org/ImageGallery"
        >
            {%- for actualFile in actualFiles -%}

                <figure itemprop="associatedMedia"
                        itemscope
                        itemtype="http://schema.org/ImageObject"
                        data-download-url="{{ actualFile.file.url }}"
                >
                    <a href="{{ thumbnailsGenerator.thumbnail(actualFile.file, 'large') }}"
                       itemprop="contentUrl"
                    >
                        <img src="{{ thumbnailsGenerator.thumbnail(actualFile.file, 'large') }}"
                             itemprop="thumbnail"
                             alt="{{ actualFile.description }}"
                        />
                    </a>
                    <figcaption itemprop="caption description">{{ actualFile.description }}</figcaption>
                </figure>
            {%- endfor -%}
        </div>
    {% else %}
        {{- '-' -}}
    {% endif %}
{%- endmacro -%}

{%- macro format_text_row(translationContext, labelTranslationKey, content) -%}

    {% import _self as self %}

    {% if content is iterable %}
        {% set content = content|join(', ') %}
    {% endif %}

    {% if content is same as (true) %}
        {% set content = 'type.bool.true'|trans %}
    {% elseif content is same as (false) %}
        {% set content = 'type.bool.false'|trans %}
    {% endif %}

    {{ self.fill_row(self.translate_field_label(translationContext, labelTranslationKey), content|trim|default('-')) }}
{%- endmacro -%}

{%- macro format_original_text_row(translationContext, labelTranslationKey, inscription) -%}
    {% import _self as self %}

    {{ self.fill_row(self.get_original_text_row_th_content(translationContext, labelTranslationKey, inscription), self.get_original_text_row_td_content(inscription)) }}
{%- endmacro -%}

{%- macro get_original_text_row_th_content(translationContext, labelTranslationKey, inscription) -%}
    {% import _self as self %}

    {%- set legendLink -%}
        <br><a href="{{ path('information__legend') }}">{{ 'legend'|transWithContext(translationContext) }}</a>
    {%- endset -%}

    {{ (self.translate_field_label(translationContext, labelTranslationKey) ~ legendLink)|raw }}
{%- endmacro -%}

{%- macro get_original_text_row_td_content(inscription) -%}
    {% import _self as self %}

    {{- self.format_zero_row(inscription, 'text', 'original-text')|default('-') -}}
{%- endmacro -%}

{%- macro translate_field_label(translationContext, labelTranslationKey) -%}
    {{ ('inscription.label.' ~ labelTranslationKey)|transWithContext(translationContext) }}
{%- endmacro -%}

{%- macro format_carrier(translationContext, inscription) -%}

    {% import _self as self %}

    <tr>
        <td colspan="2" class="eomr-blocked-cell">
            <div data-spoiler-container class="eomr-spoiler-container hidden">
                <details>
                    <summary class="eomr-spoiler-button">
                        <span class="toggler-text open-spoiler">{{ 'carrierSpoiler.close'|transWithContext(translationContext) }}</span>
                        <span class="toggler-text closed-spoiler">{{ 'carrierSpoiler.open'|transWithContext(translationContext) }}</span>
                    </summary>
                    <div class="eomr-spoiler-content-wrapper">
                        <table class="table table-bordered">
                            <tbody>
                                {{ self.format_text_row(translationContext, 'carrier.discoverySite', inscription.carrier.discoverySite) }}
                                {{ self.format_text_row(translationContext, 'carrier.storageSite', inscription.carrier.storageSite) }}                                
                                {# {{ self.format_text_row(translationContext, 'carrier.isInSitu', inscription.carrier.isInSitu) }} #}
                                {# {{ self.format_text_row(translationContext, 'carrier.storagePlace', inscription.carrier.storagePlace) }} #}
                                {{ self.format_text_row(translationContext, 'carrier.findCircumstances', inscription.carrier.findCircumstances) }}
                                {{ self.format_text_row(translationContext, 'carrier.characteristics', inscription.carrier.characteristics) }}
                                {{ self.format_text_row(translationContext, 'carrier.inventoryNumber', inscription.carrier.inventoryNumber) }}
                                {{ self.format_text_row(translationContext, 'carrier.stratigraphicalDate', inscription.carrier.stratigraphicalDate) }}
                            </tbody>
                        </table>
                    </div>
                </details>
            </div>
        </td>
    </tr>
{%- endmacro -%}

{%- macro format_literature(translationContext, inscription) -%}

    {% import _self as self %}

    {{ self.fill_row(self.translate_field_label(translationContext, 'literature'), self.get_literature_row_td_content(inscription)|default('-')) }}
{%- endmacro -%}

{%- macro get_literature_row_td_content(inscription) -%}
    {% import _self as self %}

    {{- inscription.interpretations|map(interpretation => {'pages': interpretation.PageNumbersInSource, 'source': interpretation.source})|sort((a, b) => bibliographicRecordComparer.CompareByYear(a.source, b.source))|map(record => self.format_literature_item(record))|join('<br/>')|raw -}}
{%- endmacro -%}

{%- macro format_literature_item(record) -%}
    {% set bibliographicRecord = record.source %}
    <a href="{{ path("bibliographic_record__list") }}#{{ bibliographicRecord.shortName }}"
    data-toggle="tooltip" data-placement="top" 
    title="{{ bibliographicRecord.formalNotation }}">
    {% if record.pages %}
    {{ bibliographicRecord.shortName }}: {{ record.pages }}
    {% else %}
    {{ bibliographicRecord.shortName }}
    {% endif %}
    </a>
{%- endmacro -%}

{%- macro fill_row(thContent, tdContent) -%}
    {% if tdContent != '-' %}
        <tr>
            <th scope="row">{{ thContent|raw }}</th>
            <td>{{ tdContent|trim|raw }}</td>
        </tr>
    {% endif %}
{%- endmacro -%}

{%- macro format_translation(inscription) -%}
    {% import _self as self %}

    {{- self.format_zero_row(inscription, 'translation', 'translation')|default('-') -}}
{%- endmacro -%}
